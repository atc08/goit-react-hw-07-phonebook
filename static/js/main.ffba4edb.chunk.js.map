{"version":3,"sources":["components/Filter/Filter.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/ContactList/ContactList.container.js","components/Filter/Filter.jsx","components/Filter/Filter.container.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","getLoading","state","phonebook","loading","getFilter","filter","getFilteredContact","createSelector","contacts","normalizedFilter","toLowerCase","contact","name","includes","ContactForm","id","number","handleInputsChange","target","value","setState","handleSubmit","e","preventDefault","onAdd","props","uuidv4","resetForm","this","className","s","FormContainer","onSubmit","InputTitle","type","placeholder","onChange","InputField","InputButton","Component","connect","dispatch","addedContact","post","then","data","catch","error","ContactListItem","ondeleteContact","ContactListItemText","onClick","ContactListItemButton","ContactList","length","map","delete","deleteContact","Filter","onChangeFilter","FilterText","FilterInput","App","fetchContacts","isLoadingContacts","get","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","phonebookReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ffba4edb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterText\":\"Filter_FilterText__3R3JD\",\"FilterInput\":\"Filter_FilterInput__1qky_\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('phonebook/changeFilter');\n","import axios from 'axios';\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './phonebook-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(fetchContactRequest());\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\n    .catch(error => dispatch(fetchContactError(error)));\n};\n\nconst addContact = addedContact => dispatch => {\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', addedContact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nconst deleteContact = id => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n\nexport { fetchContacts, addContact, deleteContact };\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.phonebook.loading;\n\nconst getAllContacts = state => state.phonebook.contacts;\n\nconst getFilter = state => state.phonebook.filter;\n\nconst getFilteredContact = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\nexport { getLoading, getFilter, getFilteredContact };\n\n// const getFilteredContact = state => {\n//   const contacts = getAllContacts(state);\n//   const filter = getFilter(state);\n//   const normalizedFilter = filter.toLowerCase();\n\n//   return contacts.filter(contact =>\n//     contact.name.toLowerCase().includes(normalizedFilter),\n//   );\n// };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addContact } from '../../redux/phonebook';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    id: '',\n    name: '',\n    number: '',\n  };\n\n  handleInputsChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { name, number } = this.state;\n    const { onAdd } = this.props;\n\n    if (name && number) {\n      onAdd({ id: uuidv4(), name, number });\n      this.resetForm();\n    }\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <div className={s.FormContainer}>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            <p className={s.InputTitle}>Name</p>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              placeholder=\"Enter name\"\n              onChange={this.handleInputsChange}\n              className={s.InputField}\n            ></input>\n          </label>\n          <label>\n            <p className={s.InputTitle}>Phone number</p>\n            <input\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              placeholder=\"Enter phone number\"\n              onChange={this.handleInputsChange}\n              className={s.InputField}\n            ></input>\n          </label>\n\n          <button type=\"submit\" className={s.InputButton}>\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onAdd: ({ name, number }) => dispatch(addContact({ name, number })),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport s from './ContactList.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactListItem = ({ id, name, number, ondeleteContact }) => {\n  return (\n    <>\n      <p className={s.ContactListItemText}>\n        {name}: {number}\n      </p>\n      <button\n        type=\"button\"\n        onClick={() => ondeleteContact(id)}\n        className={s.ContactListItemButton}\n      >\n        Delete\n      </button>\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  ondeleteContact: PropTypes.func,\n};\n\nexport default ContactListItem;\n","import React from 'react';\nimport ContactListItem from './ContactListItem';\nimport s from './ContactList.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, ondeleteContact }) => {\n  if (contacts.length === 0) return null;\n  return (\n    <ul className={s.ContactList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.ContactListItem}>\n          <ContactListItem\n            id={id}\n            name={name}\n            number={number}\n            ondeleteContact={ondeleteContact}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  ondeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import { connect } from 'react-redux';\nimport ContactList from './ContactList';\nimport { deleteContact, getFilteredContact } from '../../redux/phonebook';\n\nconst mapStateToProps = state => ({\n  contacts: getFilteredContact(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  ondeleteContact: id => dispatch(deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ filter, onChangeFilter }) => {\n  return (\n    <label>\n      <p className={s.FilterText}>Find contacts by name :</p>\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={onChangeFilter}\n        placeholder=\"Enter name for search\"\n        className={s.FilterInput}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onchangeFilter: PropTypes.func,\n};\n\nexport default Filter;\n","import { connect } from 'react-redux';\nimport { changeFilter, getFilter } from '../../redux/phonebook';\nimport Filter from './Filter';\n\nconst mapStateToProps = state => ({\n  filter: getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChangeFilter: e => dispatch(changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchContacts, getLoading } from './redux/phonebook';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        {this.props.isLoadingContacts && <h1>LOADING...</h1>}\n        <h1>Phonebook</h1>\n        <ContactForm />\n\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoadingContacts: getLoading(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from './phonebook-actions';\n\nconst contacts = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  // persistStore,\n  // persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport phonebookReducer from './phonebook/phonebook-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    phonebook: phonebookReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// const persistor = persistStore(store);\n\n// export { store, persistor };\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n// import { store, persistor } from './redux/store';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormContainer\":\"ContactForm_FormContainer__1kXEE\",\"InputTitle\":\"ContactForm_InputTitle__17w_i\",\"InputField\":\"ContactForm_InputField__2nYz7\",\"InputButton\":\"ContactForm_InputButton__3SnP1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__3Mxwn\",\"ContactListItem\":\"ContactList_ContactListItem__1z0YF\",\"ContactListItemText\":\"ContactList_ContactListItemText__3A0Za\",\"ContactListItemButton\":\"ContactList_ContactListItemButton__33xIS\"};"],"sourceRoot":""}